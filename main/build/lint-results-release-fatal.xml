<?xml version="1.0" encoding="UTF-8"?>
<issues format="4" by="lint 22.6.3">

    <issue
        id="ValidFragment"
        severity="Fatal"
        message="Avoid non-default constructors in fragments: use a default constructor plus Fragment#setArguments(Bundle) instead"
        category="Correctness"
        priority="6"
        summary="Ensures that `Fragment` subclasses can be instantiated"
        explanation="From the Fragment documentation:
*Every* fragment must have an empty constructor, so it can be instantiated when restoring its activity&apos;s state. It is strongly recommended that subclasses do not have other constructors with parameters, since these constructors will not be called when the fragment is re-instantiated; instead, arguments can be supplied by the caller with `setArguments(Bundle)` and later retrieved by the Fragment with `getArguments()`."
        url="http://developer.android.com/reference/android/app/Fragment.html#Fragment()"
        urls="http://developer.android.com/reference/android/app/Fragment.html#Fragment()"
        errorLine1="    public BasePageFragment(int sectionNumber) {"
        errorLine2="    ^">
        <location
            file="/home/anuraag/vtagme_android/main/src/main/java/me/vtag/app/BasePageFragment.java"
            line="18"/>
    </issue>

    <issue
        id="ValidFragment"
        severity="Fatal"
        message="This fragment should provide a default constructor (a public constructor with no arguments) (me.vtag.app.BasePageFragment)"
        category="Correctness"
        priority="6"
        summary="Ensures that `Fragment` subclasses can be instantiated"
        explanation="From the Fragment documentation:
*Every* fragment must have an empty constructor, so it can be instantiated when restoring its activity&apos;s state. It is strongly recommended that subclasses do not have other constructors with parameters, since these constructors will not be called when the fragment is re-instantiated; instead, arguments can be supplied by the caller with `setArguments(Bundle)` and later retrieved by the Fragment with `getArguments()`."
        url="http://developer.android.com/reference/android/app/Fragment.html#Fragment()"
        urls="http://developer.android.com/reference/android/app/Fragment.html#Fragment()"
        errorLine1="    public BasePageFragment(int sectionNumber) {"
        errorLine2="           ~~~~~~~~~~~~~~~~">
        <location
            file="/home/anuraag/vtagme_android/main/src/main/java/me/vtag/app/BasePageFragment.java"
            line="18"
            column="12"/>
    </issue>

    <issue
        id="ValidFragment"
        severity="Fatal"
        message="This fragment should provide a default constructor (a public constructor with no arguments) (me.vtag.app.pages.HomePageFragment)"
        category="Correctness"
        priority="6"
        summary="Ensures that `Fragment` subclasses can be instantiated"
        explanation="From the Fragment documentation:
*Every* fragment must have an empty constructor, so it can be instantiated when restoring its activity&apos;s state. It is strongly recommended that subclasses do not have other constructors with parameters, since these constructors will not be called when the fragment is re-instantiated; instead, arguments can be supplied by the caller with `setArguments(Bundle)` and later retrieved by the Fragment with `getArguments()`."
        url="http://developer.android.com/reference/android/app/Fragment.html#Fragment()"
        urls="http://developer.android.com/reference/android/app/Fragment.html#Fragment()"
        errorLine1="    public HomePageFragment(List&lt;BaseTagModel> tagModels) {"
        errorLine2="           ~~~~~~~~~~~~~~~~">
        <location
            file="/home/anuraag/vtagme_android/main/src/main/java/me/vtag/app/pages/HomePageFragment.java"
            line="24"
            column="12"/>
    </issue>

    <issue
        id="ValidFragment"
        severity="Fatal"
        message="Avoid non-default constructors in fragments: use a default constructor plus Fragment#setArguments(Bundle) instead"
        category="Correctness"
        priority="6"
        summary="Ensures that `Fragment` subclasses can be instantiated"
        explanation="From the Fragment documentation:
*Every* fragment must have an empty constructor, so it can be instantiated when restoring its activity&apos;s state. It is strongly recommended that subclasses do not have other constructors with parameters, since these constructors will not be called when the fragment is re-instantiated; instead, arguments can be supplied by the caller with `setArguments(Bundle)` and later retrieved by the Fragment with `getArguments()`."
        url="http://developer.android.com/reference/android/app/Fragment.html#Fragment()"
        urls="http://developer.android.com/reference/android/app/Fragment.html#Fragment()"
        errorLine1="        super(ID);"
        errorLine2="        ^">
        <location
            file="/home/anuraag/vtagme_android/main/src/main/java/me/vtag/app/pages/HomePageFragment.java"
            line="25"/>
    </issue>

    <issue
        id="ValidFragment"
        severity="Fatal"
        message="Avoid non-default constructors in fragments: use a default constructor plus Fragment#setArguments(Bundle) instead"
        category="Correctness"
        priority="6"
        summary="Ensures that `Fragment` subclasses can be instantiated"
        explanation="From the Fragment documentation:
*Every* fragment must have an empty constructor, so it can be instantiated when restoring its activity&apos;s state. It is strongly recommended that subclasses do not have other constructors with parameters, since these constructors will not be called when the fragment is re-instantiated; instead, arguments can be supplied by the caller with `setArguments(Bundle)` and later retrieved by the Fragment with `getArguments()`."
        url="http://developer.android.com/reference/android/app/Fragment.html#Fragment()"
        urls="http://developer.android.com/reference/android/app/Fragment.html#Fragment()"
        errorLine1="        super(ID);"
        errorLine2="        ^">
        <location
            file="/home/anuraag/vtagme_android/main/src/main/java/me/vtag/app/pages/TagPageFragment.java"
            line="31"/>
    </issue>

    <issue
        id="ValidFragment"
        severity="Fatal"
        message="Avoid non-default constructors in fragments: use a default constructor plus Fragment#setArguments(Bundle) instead"
        category="Correctness"
        priority="6"
        summary="Ensures that `Fragment` subclasses can be instantiated"
        explanation="From the Fragment documentation:
*Every* fragment must have an empty constructor, so it can be instantiated when restoring its activity&apos;s state. It is strongly recommended that subclasses do not have other constructors with parameters, since these constructors will not be called when the fragment is re-instantiated; instead, arguments can be supplied by the caller with `setArguments(Bundle)` and later retrieved by the Fragment with `getArguments()`."
        url="http://developer.android.com/reference/android/app/Fragment.html#Fragment()"
        urls="http://developer.android.com/reference/android/app/Fragment.html#Fragment()"
        errorLine1="    public YoutubePlayerFragment(VideoMetaModel meta) {"
        errorLine2="    ^">
        <location
            file="/home/anuraag/vtagme_android/main/src/main/java/me/vtag/app/pages/players/YoutubePlayerFragment.java"
            line="26"/>
    </issue>

    <issue
        id="ValidFragment"
        severity="Fatal"
        message="This fragment should provide a default constructor (a public constructor with no arguments) (me.vtag.app.pages.players.YoutubePlayerFragment)"
        category="Correctness"
        priority="6"
        summary="Ensures that `Fragment` subclasses can be instantiated"
        explanation="From the Fragment documentation:
*Every* fragment must have an empty constructor, so it can be instantiated when restoring its activity&apos;s state. It is strongly recommended that subclasses do not have other constructors with parameters, since these constructors will not be called when the fragment is re-instantiated; instead, arguments can be supplied by the caller with `setArguments(Bundle)` and later retrieved by the Fragment with `getArguments()`."
        url="http://developer.android.com/reference/android/app/Fragment.html#Fragment()"
        urls="http://developer.android.com/reference/android/app/Fragment.html#Fragment()"
        errorLine1="    public YoutubePlayerFragment(VideoMetaModel meta) {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/home/anuraag/vtagme_android/main/src/main/java/me/vtag/app/pages/players/YoutubePlayerFragment.java"
            line="26"
            column="12"/>
    </issue>

</issues>
